{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stlp\\\\Desktop\\\\react_tutorial\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  // this function is to allow us to pass data up from the ExpenseFprm \n  // the form will pass the data as argument to this function then we will copy the data into new object\n  // we will also add an id to it\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expensedata = { ...enteredExpenseData,\n      id: Math.random().toString()\n    }; // now we also need pass it up further to the App\n\n    props.onAddExpense(expensedata);\n    setIsEditing(false);\n  };\n\n  const [isEditing, setIsEditing] = useState(false); // to open the form\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  }; // this function will be called from the ExpenseForm component to cancel the form\n\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 28\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["C:/Users/stlp/Desktop/react_tutorial/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expensedata","id","Math","random","toString","onAddExpense","setIsEditing","isEditing","startEditingHandler","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAI1B;AACA;AACA;AACA,QAAMC,sBAAsB,GAAIC,kBAAD,IAAwB;AACnD,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AAEhBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFY,KAApB,CADmD,CAMnD;;AACAP,IAAAA,KAAK,CAACQ,YAAN,CAAmBL,WAAnB;AACAM,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GATD;;AAWA,QAAM,CAACC,SAAD,EAAYD,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C,CAlB0B,CAmB1B;;AACA,QAAMc,mBAAmB,GAAG,MAAM;AAC9BF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD,CApB0B,CAuB1B;;;AACA,QAAMG,kBAAkB,GAAG,MAAM;AAC7BH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACK,CAACC,SAAD,iBAAc;AAAQ,MAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAEKD,SAAS,iBAAI,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAET,sBAAhC;AAAwD,MAAA,QAAQ,EAAEW;AAAlE;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlCD;;GAAMb,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    \r\n\r\n    // this function is to allow us to pass data up from the ExpenseFprm \r\n    // the form will pass the data as argument to this function then we will copy the data into new object\r\n    // we will also add an id to it\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expensedata = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n\r\n        // now we also need pass it up further to the App\r\n        props.onAddExpense(expensedata);\r\n        setIsEditing(false);\r\n    }\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    // to open the form\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n    // this function will be called from the ExpenseForm component to cancel the form\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}