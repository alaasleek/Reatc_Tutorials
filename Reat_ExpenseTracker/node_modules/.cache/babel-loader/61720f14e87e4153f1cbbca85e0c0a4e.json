{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stlp\\\\Desktop\\\\react_tutorial\\\\01-starting-setup\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\"; // Array of expenses\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DummyExpensesList = [{\n  id: 'e1',\n  title: 'Toilet Paper',\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: 'e2',\n  title: 'TV',\n  amount: 436.16,\n  date: new Date(2021, 3, 13)\n}, {\n  id: 'e3',\n  title: 'Car',\n  amount: 4330.00,\n  date: new Date(2019, 4, 10)\n}, {\n  id: 'e4',\n  title: 'Food',\n  amount: 326.03,\n  date: new Date(2022, 6, 12)\n}];\n\nfunction App() {\n  _s();\n\n  const [expensesList, setExpensesList] = useState(DummyExpensesList);\n\n  const addExpensehandler = expense => {\n    // add new expense to list and copy the old ones\n    // setExpensesList([expense, ...expensesList]); // this will work but not good, better to use functions\n    // using function: the prevExpense will be passed automatically to the funstion\n    setExpensesList(prevExpense => {\n      return [expense, ...prevExpense];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpensehandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      expenses: expensesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AHo1Gmu/QKdT+mdhQ+LMsAU8o8M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/stlp/Desktop/react_tutorial/01-starting-setup/src/App.js"],"names":["React","useState","Expenses","NewExpense","DummyExpensesList","id","title","amount","date","Date","App","expensesList","setExpensesList","addExpensehandler","expense","prevExpense"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CAEE;;;AACA,MAAMC,iBAAiB,GAAG,CACxB;AAACC,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,KAAK,EAAE,cAAlB;AAAkCC,EAAAA,MAAM,EAAE,KAA1C;AAAiDC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAAvD,CADwB,EAExB;AAACJ,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,KAAK,EAAE,IAAlB;AAAwBC,EAAAA,MAAM,EAAE,MAAhC;AAAwCC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAA9C,CAFwB,EAGxB;AAACJ,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,KAAK,EAAE,KAAlB;AAAyBC,EAAAA,MAAM,EAAE,OAAjC;AAA0CC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAAhD,CAHwB,EAIxB;AAACJ,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,KAAK,EAAE,MAAlB;AAA0BC,EAAAA,MAAM,EAAE,MAAlC;AAA0CC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAAhD,CAJwB,CAA1B;;AAOF,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAACG,iBAAD,CAA/C;;AACA,QAAMS,iBAAiB,GAAIC,OAAD,IAAa;AAErC;AACA;AAEA;AACAF,IAAAA,eAAe,CAAEG,WAAD,IAAiB;AAAC,aAAO,CAACD,OAAD,EAAU,GAAGC,WAAb,CAAP;AAAiC,KAApD,CAAf;AACD,GAPD;;AASA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n  // Array of expenses\n  const DummyExpensesList = [\n    {id: 'e1', title: 'Toilet Paper', amount: 94.12, date: new Date(2020, 7, 14)},\n    {id: 'e2', title: 'TV', amount: 436.16, date: new Date(2021, 3, 13)},\n    {id: 'e3', title: 'Car', amount: 4330.00, date: new Date(2019, 4, 10)},\n    {id: 'e4', title: 'Food', amount: 326.03, date: new Date(2022, 6, 12)},\n  ];\n\nfunction App() {\n\n  const[expensesList, setExpensesList] = useState(DummyExpensesList);\n  const addExpensehandler = (expense) => {\n\n    // add new expense to list and copy the old ones\n    // setExpensesList([expense, ...expensesList]); // this will work but not good, better to use functions\n\n    // using function: the prevExpense will be passed automatically to the funstion\n    setExpensesList((prevExpense) => {return [expense, ...prevExpense]});\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpensehandler}/>\n      <Expenses expenses={expensesList}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}